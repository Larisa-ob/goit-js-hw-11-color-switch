{"version":3,"sources":["webpack:///./toastrOption.js","webpack:///./timer.js"],"names":["toastr","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","refs","timerStart","document","querySelector","timerStop","bodyColor","timerId","colors","legh","length","addEventListener","e","console","log","preventDefault","setInterval","min","max","array","index","Value","Math","floor","random","body","style","background","removeAttribute","setAttribute","clearInterval"],"mappings":"mIACAA,EAAOC,QAAU,CACbC,aAAa,EACbC,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,cAAe,kBACfC,mBAAmB,EACnBC,QAAS,KACTC,aAAc,MACdC,aAAc,OACdC,QAAS,OACTC,gBAAiB,OACjBC,WAAY,QACZC,WAAY,SACZC,WAAY,SACZC,WAAY,W,cCbVC,EAAO,CACTC,WAAYC,SAASC,cAAc,+BACnCC,UAAWF,SAASC,cAAc,8BAClCE,UAAWH,SAASC,cAAc,SAElCG,EAAU,KAERC,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,WAEEC,EAAOD,EAAOE,OAGpBT,EAAKC,WAAWS,iBAAiB,SAEjC,SAAsBC,GAElB,GADAC,QAAQC,IAAIP,GACRA,EACA,OAEJK,EAAEG,iBACFF,QAAQC,IAAI,aAEZP,EAAUS,aAAY,WAClB,IAwB+BC,EAAKC,EAHlBC,EAMhBC,EA3BIC,GAqBYF,EArBkBX,EAwBLS,EAFvB,EAE4BC,EAD5BT,EAAO,EAIbW,EAFKE,KAAKC,MAAMD,KAAKE,UAAYN,EAAMD,EAAM,GAAKA,GAGtCE,EAAMC,IA3BpBjB,SAASsB,KAAKC,MAAMC,WAAaN,IAClC,KAEHpB,EAAKI,UAAUuB,gBAAgB,YAC/B3B,EAAKC,WAAW2B,aAAa,YAAY,MAK7C5B,EAAKI,UAAUM,iBAAiB,SAAS,WAChCJ,IAGLuB,cAAcvB,GACdA,EAAU,KACVM,QAAQC,IAAI,wBACZb,EAAKC,WAAW0B,gBAAgB,YAChC3B,EAAKI,UAAUwB,aAAa,YAAY,Q","file":"main.12ab5ff196357525d7e9.js","sourcesContent":["import toastr from 'toastr';\r\ntoastr.options = {\r\n    closeButton: false,\r\n    debug: false,\r\n    newestOnTop: true,\r\n    progressBar: true,\r\n    positionClass: 'toast-top-right',\r\n    preventDuplicates: false,\r\n    onclick: null,\r\n    showDuration: '300',\r\n    hideDuration: '1000',\r\n    timeOut: '2000',\r\n    extendedTimeOut: '1000',\r\n    showEasing: 'swing',\r\n    hideEasing: 'linear',\r\n    showMethod: 'fadeIn',\r\n    hideMethod: 'fadeOut',\r\n};\r\n","import 'toastr/build/toastr.min.css';\r\nimport './toastrOption';\r\nimport './timer.css';\r\nconst refs = {\r\n    timerStart: document.querySelector(\"button[data-action='start']\"),\r\n    timerStop: document.querySelector(\"button[data-action='stop']\"),\r\n    bodyColor: document.querySelector('body'),\r\n};\r\nlet timerId = null;\r\nlet currentValue = null;\r\nconst colors = [\r\n    '#FFFFFF',\r\n    '#2196F3',\r\n    '#4CAF50',\r\n    '#FF9800',\r\n    '#009688',\r\n    '#795548',\r\n];\r\nconst legh = colors.length;\r\n// При клике на Старт, запустим интервал,\r\n// будем каждую секунду менять цвет body\r\nrefs.timerStart.addEventListener('click', OnStartClick);\r\n\r\nfunction OnStartClick(e) {\r\n    console.log(timerId);\r\n    if (timerId) {\r\n        return;\r\n    }\r\n    e.preventDefault();\r\n    console.log('start ...');\r\n\r\n    timerId = setInterval(() => {\r\n        const Value = colorId(currentValue, colors);\r\n        document.body.style.background = Value;\r\n    }, 1000);\r\n\r\n    refs.timerStop.removeAttribute('disabled');\r\n    refs.timerStart.setAttribute('disabled', true);\r\n}\r\n\r\n// По клику на Стоп вызовем clearInterval и передадим\r\n// аргументом ID того счетчика который надо остановить\r\nrefs.timerStop.addEventListener('click', () => {\r\n    if (!timerId) {\r\n        return;\r\n    }\r\n    clearInterval(timerId);\r\n    timerId = null;\r\n    console.log('setInterval stopped!');\r\n    refs.timerStart.removeAttribute('disabled');\r\n    refs.timerStop.setAttribute('disabled', true);\r\n});\r\n//Для вывода ID элемента который выпал при работе генератора сл.чисел\r\nfunction colorId(element, array) {\r\n    const min = 0;\r\n    const max = legh - 1;\r\n    const randomIntegerFromInterval = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    };\r\n    const index = randomIntegerFromInterval(min, max);\r\n    return (element = array[index]);\r\n}\r\n"],"sourceRoot":""}